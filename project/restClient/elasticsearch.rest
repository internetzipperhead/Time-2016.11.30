@hostname = localhost
@port = 9200
@Authorization = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1NzkyMjEwNzMsIm5iZiI6MTU3OTIyMTA3MywianRpIjoiOGRkMmU4N2UtOGZhMS00ZDQ0LTg0YTctYzc0ZjAwNjk4MDcxIiwiZXhwIjoxNTc5ODI1ODczLCJpZGVudGl0eSI6eyJ1c2VySUQiOjEsInVzZXJuYW1lIjoiYWRtaW4iLCJ1c2VydHlwZSI6MX0sImZyZXNoIjpmYWxzZSwidHlwZSI6ImFjY2VzcyJ9.ldnpLWBNdGw1p4nfo-N3HIJQN9OITcWWE62pzCkSZ5s
@contentType = application/json


### 创建索引 （database）
PUT http://{{hostname}}:{{port}}/blog
User-Agent: vscode-restclient
Content-Type: {{contentType}}
# article 相当于 type 表相当于 type 表
# properties 相当于 文档 document 的 属性 filed
# 踩坑 https://www.cnblogs.com/feiquan/p/11888812.html

{
  "settings": {
    "number_of_shards": 3,
    "number_of_replicas": 1
  },
  "mappings": {
    "properties": {
      "id": {
        "type": "long",
        "store": true
      },
      "title": {
        "type": "text",
        "store": true,
        "index": true,
        "analyzer": "standard"
      },
      "content": {
        "type": "text",
        "store": true,
        "index": true,
        "analyzer": "standard"
      }
    }
  }
}


### 获取用户列表 （旧的写法）
PUT http://{{hostname}}:{{port}}/blog?include_type_name=true
Authorization: Bearer {{Authorization}}

{
  "settings": {
    "number_of_shards": 3,
    "number_of_replicas": 1
  },
  "mappings": {
    "article": {
      "properties": {
        "id": {
          "type": "long",
          "store": true
        },
        "title": {
          "type": "text",
          "store": true,
          "index": true,
          "analyzer": "standard"
        },
        "content": {
          "type": "text",
          "store": true,
          "index": true,
          "analyzer": "standard"
        }
      }
    }
  }
}

### 设置 index-hello 中具体的 type 信息
POST http://{{hostname}}:{{port}}/index-hello/hello/_mappings
User-Agent: vscode-restclient
Content-Type: {{contentType}}

{
  "hello": {
    "id": {
      "type": "long",
      "store": true
    },
    "title": {
      "type": "text",
      "store": true,
      "index": true,
      "analyzer": "standard"
    },
    "content": {
      "type": "text",
      "store": true,
      "index": true,
      "analyzer": "standard"
    }
  }
}


### 创建document
POST http://{{hostname}}:{{port}}/blog/_doc/3
Authorization: Bearer {{Authorization}}
Content-Type: {{contentType}}

{
  "id": 3,
  "title": "在家办公",
  "content": "注意，上面的 group_by_word_count 表示该聚合的名称，是自定义的，可以自己为该聚合命名。"
}


### 查询（标准：只能是一个关键字，两个就不行）
POST http://{{hostname}}:{{port}}/blog/_doc/_search
Content-Type: {{contentType}}

{
  "query": {
    "term": {
      "content": "当"
    }
  }
}


### 查询（关键词：可以是多个字符串）
POST http://{{hostname}}:{{port}}/blog/_doc/_search
Content-Type: {{contentType}}

{
  "query": {
    "query_string": {
      "default_field": "content",
      "query": "大规模"
    }
  }
}


### 查看分词结果 (v7版本有变化). 默认是 standard。可以安装 ik。使用 ik_smart | ik_max_word
POST http://{{hostname}}:{{port}}/_analyze
Content-Type: {{contentType}}

{
  "analyzer": "ik_smart",
  "text": "端正坐姿，好好上班"
}


### 添加修改数据
POST http://{{hostname}}:{{port}}/people/_doc/4
Content-Type: {{contentType}}

{
  "name" : "小男",
  "age" : 22,
  "sex": "男"
}


### 获取数据
GET http://{{hostname}}:{{port}}/people/_doc/2
Content-Type: {{contentType}}


### 查询所有
GET http://{{hostname}}:{{port}}/people/_search
Content-Type: {{contentType}}


### 匹配查询
GET http://{{hostname}}:{{port}}/people/_search
Content-Type: {{contentType}}

{
  "query": {
    "match": {
      "sex": "男"
    }
  }
}


### 词条匹配（精确查找） term 被用于精确值 匹配。 使用只能是 term：{"sex": "男"} 不能是数组
### _source 用于过滤字段
GET http://{{hostname}}:{{port}}/people/_search
Content-Type: {{contentType}}

{
  "query": {
    "terms": {
      "sex": ["男", "女"]
    }
  },
  "_source": "name"
}


###  NOTE:  第二部分：集群

### 🎈集群，创建索引 映射
PUT http://{{hostname}}:9201/blog/_mapping
User-Agent: vscode-restclient
Content-Type: {{contentType}}

{
  "properties": {
    "id": {
      "type": "long",
      "store": true
    },
    "title": {
      "type": "text",
      "store": true,
      "analyzer": "ik_smart"
    },
    "content": {
      "type": "text",
      "store": true,
      "analyzer": "ik_smart"
    }
  }
}

### 添加数据
POST http://{{hostname}}:9201/blog/_doc/4
User-Agent: vscode-restclient
Content-Type: {{contentType}}

{
  "id": 4,
  "title": "快递公司全面复工",
  "content": "尽管截止到2月10日(今天)各大快递公司全面复工,但是“用工荒”问题仍旧十分凸显。据国家邮政局2019年发布的快递员生存现状调查报告,76.31%的快递员"
}
